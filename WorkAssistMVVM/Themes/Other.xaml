<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WorkAssistMVVM.Themes">
    <Style x:Key="txtblkDataStyle" TargetType="TextBlock">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="UltraBold"/>
        <Setter Property="TextDecorations" Value="Underline"/>
        <Setter Property="Foreground" Value="Blue"/>
    </Style>
    <Style x:Key="wpStyle" TargetType="WrapPanel">
        <Setter Property="Margin" Value="0,5"/>
    </Style>
    <Style x:Key="txtblkHeaderStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <!--<Setter Property="Width" Value="80"/>-->
        <Setter Property="Margin" Value="5,0,0,5"/>
    </Style>
    <Style x:Key="txtblkGroupBoxHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="OrangeRed"/>
        <Setter Property="FontWeight" Value="UltraBold"/>
    </Style>
    <Style x:Key="btnCatogory" TargetType="Button">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="btnKPIstyle" TargetType="Button">
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="txtbxDetail" TargetType="TextBox">
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    <Style x:Key="txtbxDetailMore" TargetType="TextBox">
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>
    <Style x:Key="lbDetailTitle" TargetType="Label">
        <!--<Setter Property="Height" Value="25" />-->
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="dgStyle" TargetType="DataGrid">
        <!--网格线颜色-->
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <!--<Setter Property="Background" Value="Transparent" />-->
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color ="White"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="White"/>
            </Setter.Value>
        </Setter>
    </Style>
    <!--datagrid标题栏样式-->
    <Style x:Key="dgColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <!--<Setter Property="Width" Value="80"/>-->
        <!--<Setter Property="Height" Value="30"/>-->
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Background" Value="#FF0070C0" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Foreground" Value="#323433" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" BorderBrush="#e6dbba" Width="Auto">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Grid.Column="2" Width="8" Height="6" Fill="#FF0070C0" Margin="0,0,50,0"  VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                            <Rectangle Width="1" Fill="#d6c79b" HorizontalAlignment="Right" Grid.ColumnSpan="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="25"/>
    </Style>
    <!--行样式触发-->
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style TargetType="DataGridRow">
        <!--<Setter Property="Background" Value="#F2F2F2" />-->
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <!--隔行换色-->
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#e7e7e7" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#f2f2f2" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Gray" />
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  单元格样式-->
    <Style TargetType="DataGridCell">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="Bg"  UseLayoutRounding="False" HorizontalAlignment="Stretch" BorderBrush="Transparent" BorderThickness="1" >
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"  Margin="2,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Gray" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="rbtnStyle" TargetType="RadioButton">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="5"/>
    </Style>


    <SolidColorBrush x:Key="Button.Static.Background" Color="#CC002060"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#CC002060" Opacity="0.5"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#CC002060" Opacity="0.2"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="2" >
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="lbStyleKPI" TargetType="Label">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="3,0"/>
    </Style>
    <Style x:Key="tbStyleKPI" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="cbStyleKPI" TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="3,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>