<UserControl x:Class="WorkAssistMVVM.Views.UCTeamCase"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WorkAssistMVVM.Views"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converter="clr-namespace:WorkAssistMVVM.Converters"
             prism:ViewModelLocator.AutoWireViewModel="True" Margin="50,5">
    <UserControl.Resources>
        <converter:CheckboxConverter x:Key="cbc"  />
        <Style TargetType="TabItem">
            <Setter Property="Header" Value="{Binding DataContext.Title}" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property ="HeaderTemplate" >
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock x:Name="headerText" Text="{Binding Path=Header, RelativeSource={RelativeSource AncestorType=TabItem}}" FontSize="18" />

                        <DataTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="FontWeight" TargetName="headerText" Value="Bold"/>
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>

            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Height="40" Width="100">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,0" Background="{TemplateBinding Background}" Margin="1">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="0,0,0,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Grid Height="2" x:Name="bottomLine" VerticalAlignment="Bottom" Background="White" Visibility="Hidden">
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>


                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>

                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                <!--<Setter Property="Foreground" Value="Wheat"/>-->
                                <Setter Property="Visibility" TargetName="bottomLine" Value="Visible"/>

                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="5"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <!--<Button Content="刷新" Style="{DynamicResource ButtonStyle1}" Height="40" Width="200"/>-->
        <TabControl Grid.Row="1" Background="Transparent">
            <TabItem Header="可处理情况" >
                <Grid Background="#FF038F94">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="15"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="500"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                
                    <StackPanel Grid.ColumnSpan="2">
                        <!--<WrapPanel Margin="5" HorizontalAlignment="Center">
                            <CheckBox x:Name="cbSelectAll" Content="全选" 
                                      Style="{DynamicResource cbStyleKPI}" 
                                      Margin="10,0,0,0" 
                                      Command="{Binding CheckAllCommand}" >
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbSelectAll" Path="Content"/>
                                        <Binding ElementName="cbSelectAll" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbBJ" Content="北京" IsChecked="{Binding ElementName=cbSelectAll,Path=IsChecked,Mode=OneWay}"
                                      Style="{DynamicResource cbStyleKPI}" Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding SelectedKpiInfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbBJ" Path="Content"/>
                                        <Binding ElementName="cbBJ" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbSH" Content="上海" IsChecked="{Binding ElementName=cbSelectAll,Path=IsChecked,Mode=OneWay}"
                                      Style="{DynamicResource cbStyleKPI}" 
                                      Command="{Binding CheckCommand}" 
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbSH" Path="Content"/>
                                        <Binding ElementName="cbSH" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbGZ" Content="广州" IsChecked="{Binding ElementName=cbSelectAll,Path=IsChecked,Mode=OneWay}"
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbGZ" Path="Content"/>
                                        <Binding ElementName="cbGZ" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbSZ" Content="深圳" IsChecked="{Binding ElementName=cbSelectAll,Path=IsChecked,Mode=OneWay}"
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbSZ" Path="Content"/>
                                        <Binding ElementName="cbSZ" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbCS" Content="长沙" IsChecked="{Binding ElementName=cbSelectAll,Path=IsChecked,Mode=OneWay}"
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbCS" Path="Content"/>
                                        <Binding ElementName="cbCS" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbSuZhou" Content="苏州" IsChecked="{Binding ElementName=cbSelectAll,Path=IsChecked,Mode=OneWay}"
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbSuZhou" Path="Content"/>
                                        <Binding ElementName="cbSuZhou" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbXiAn" Content="西安" IsChecked="{Binding ElementName=cbSelectAll,Path=IsChecked,Mode=OneWay}"
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbXiAn" Path="Content"/>
                                        <Binding ElementName="cbXiAn" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbFS" Content="佛山" IsChecked="{Binding ElementName=cbSelectAll,Path=IsChecked,Mode=OneWay}"
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbFS" Path="Content"/>
                                        <Binding ElementName="cbFS" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbHZ" Content="杭州" IsChecked="{Binding ElementName=cbSelectAll,Path=IsChecked,Mode=OneWay}"
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbHZ" Path="Content"/>
                                        <Binding ElementName="cbHZ" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>

                        </WrapPanel>-->
                        <!--<WrapPanel Margin="5" HorizontalAlignment="Center">
                            <CheckBox x:Name="cbApp" Content="新申请" 
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbApp" Path="Content"/>
                                        <Binding ElementName="cbApp" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbOA" Content="OA/补正" 
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbOA" Path="Content"/>
                                        <Binding ElementName="cbOA" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                            <CheckBox x:Name="cbOther" Content="其他" 
                                      Style="{DynamicResource cbStyleKPI}"
                                      Command="{Binding CheckCommand}"
                                      IsEnabled="{Binding KPIinfos.Count}">
                                <CheckBox.CommandParameter>
                                    <MultiBinding Converter="{StaticResource cbc}">
                                        <Binding ElementName="cbOther" Path="Content"/>
                                        <Binding ElementName="cbOther" Path="IsChecked"/>
                                    </MultiBinding>
                                </CheckBox.CommandParameter>
                            </CheckBox>
                        </WrapPanel>-->
                    </StackPanel>
                    <WrapPanel Grid.Row="1" Grid.Column="1">
                        <RadioButton Content="新申请" Foreground="White" Margin="5,0" IsEnabled="{Binding RadiobuttonEnable}"
                                     IsChecked="{Binding AllNewAppSelected}" Command="{Binding GetAllNewAppCommand}"/>
                        <RadioButton Content="新申请（可处理）" Foreground="White" IsEnabled="{Binding RadiobuttonEnable}"
                                     Margin="5,0" Command="{Binding GetCandoNewAppCommand}" IsChecked="{Binding CandoNewAppSelected}"/>
                        <RadioButton Content="OA" Foreground="White" IsEnabled="{Binding RadiobuttonEnable}"
                                     Command="{Binding GetAllOACommand}"/>
                        <RadioButton Content="其他" Foreground="White" IsEnabled="{Binding RadiobuttonEnable}"
                                     Command="{Binding GetAllOtherCommand}" Margin="5,0"/>
                    </WrapPanel>
                    <DataGrid x:Name="dgUndonePoint" Grid.Row="2" 
                              AutoGenerateColumns="False" IsReadOnly="True" 
                              Margin="5" Style="{DynamicResource dgStyle}"
                              ItemsSource="{Binding AttorneySummarizes}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <!--This action will invoke the selected command in the view model and pass the parameters of the event to it.-->
                                <prism:InvokeCommandAction Command="{Binding SelectionCommand}" TriggerParameterPath="AddedItems" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="地区" Binding="{Binding Zone}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>
                            <DataGridTextColumn Header="姓名" Binding="{Binding Name}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>
                            <DataGridTextColumn Header="权值" Binding="{Binding Weight}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid x:Name="dgUndoneCases" Grid.Row="2" Grid.Column="1" 
                              AutoGenerateColumns="False" IsReadOnly="True" Style="{DynamicResource dgStyle}"
                              Margin="5" ItemsSource="{Binding Tasks}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="我方文号" Binding="{Binding AttorneySeries}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>
                            <!--<DataGridTextColumn Header="承办人" Binding="{Binding Attorney}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>-->
                            <DataGridTextColumn Header="任务名称" Binding="{Binding TaskName}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>
                            <DataGridTextColumn Header="任务属性" Binding="{Binding TaskAttribute}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>
                            <DataGridTextColumn Header="客户名称" Binding="{Binding CustomerName}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>
                            <DataGridTextColumn Header="案件名称" Binding="{Binding CaseName}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>
                            <DataGridTextColumn Header="状态" Binding="{Binding ProcessStage}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>
                            <DataGridTextColumn Header="初稿期限" Binding="{Binding FirstVersionDeadline,StringFormat={}{0:yyyy-MM-dd}}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>                    
                            <!--<DataGridTextColumn Header="权值" Binding="{Binding Weight}" HeaderStyle="{DynamicResource dgColumnHeaderStyle}"/>-->
                        </DataGrid.Columns>
                     </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="初稿存量">

            </TabItem>
            <TabItem Header="可处理情况">

            </TabItem>
            <TabItem Header="OA监控">

            </TabItem>
            <TabItem Header="超期监控">

            </TabItem>
            <TabItem Header="搁置监控">

            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
